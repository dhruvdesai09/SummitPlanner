"""Added Profile table with user_id foreign key

Revision ID: 9df8576a2a3c
Revises: 
Create Date: 2025-03-19 14:12:39.500857

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '9df8576a2a3c'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('profiles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('full_name', sa.String(), nullable=True),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('address', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_index(op.f('ix_profiles_id'), 'profiles', ['id'], unique=False)
    op.drop_table('user_profiles')
    op.drop_constraint('users_user_id_key', 'users', type_='unique')
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_unique_constraint(None, 'users', ['username'])
    op.drop_column('users', 'user_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('user_id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'users', type_='unique')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.create_unique_constraint('users_user_id_key', 'users', ['user_id'])
    op.create_table('user_profiles',
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('full_name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('income_level', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('financial_goals', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('currency_preference', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('risk_tolerance', sa.TEXT(), server_default=sa.text("'Minimum'::text"), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('user_id', name='user_profiles_pkey')
    )
    op.drop_index(op.f('ix_profiles_id'), table_name='profiles')
    op.drop_table('profiles')
    # ### end Alembic commands ###
